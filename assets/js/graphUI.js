const PATH=" ",WALL="#",SEARCH_PATH="=";var NODE_SIZE=20;const PATH_COLOR="#1b1b1b",BLOCK_COLOR="#0f0f0f",STANDBY_COLOR="#3d0b0b",SEARCHED_COLOR="#0c1f29",FINAL_PATH_COLOR="#0f2e0d",ctx=document.getElementById("grid").getContext("2d");var state,numNodes=0,needResizing=!1,curMazeGenAlgo=0;function Point(e,t){this.x=e,this.y=t}function Tree(e,t){this.x=e,this.y=t,this.parent=void 0}function Edge(e,t,n){this.weight=n,this.node1=e,this.node2=t,this.node1.edges.push(this),this.node2.edges.push(this)}function Node(e){this.key=numNodes++,this.val=e,this.edges=[]}function KeyVal(e,t){this.w=e,this.val=t}function PriorityQueue(){this.queue=[]}function createArray(e,t){array=new Array;for(var n=0;n<t;n++){array.push([]);for(var i=0;i<e;i++)array[n].push("#")}return array}function shuffle(e){for(var t=e.length-1;t>0;t--){var n=Math.floor(Math.random()*(t+1)),i=e[t];e[t]=e[n],e[n]=i}}function print(e){for(var t=0;t<e.length;t++)console.log(e[t].join(""))}function getNeighbours(e,t,n,i){let o=[];for(var r=0;r<n.length;r++){var s=n[r].x+e.x,l=n[r].y+e.y;s>0&&l>0&&s<t[0].length-1&&l<t.length-1&&t[l][s]==i&&o.push(new Point(s,l))}return o}function arrayToGraph(e){let t=[];for(let n=0;n<e.length;n++){t.push([]);for(let i=0;i<e[0].length;i++)t[n].push(new Node(new Point(i,n)))}for(let n=1;n<t.length-1;n++)for(let i=1;i<t[0].length-1;i++)e[n][i]==PATH&&(e[n+1][i]==PATH&&t[n][i].connect(t[n+1][i],1),e[n][i+1]==PATH&&t[n][i].connect(t[n][i+1],1));return[t[1][1],t[t.length-2][t[0].length-2]]}function chooseMazeGen(e,t,n){e=createArray(e[0].length,e.length);let i=document.getElementById("alg-description-title"),o=document.getElementById("alg-description-body");switch(curMazeGenAlgo){case 0:setTimeout(()=>{fillGrid(t,BLOCK_COLOR),i.innerHTML="Kruskal's Algorithm",o.innerHTML="Simple minimum spanning tree algorith for maze generation",kruskalsUI(e,t,n)},3e3);break;case 1:setTimeout(()=>{i.innerHTML="Prim's Algorithm",o.innerHTML="Simple minimum spanning tree algorith for maze generation",fillGrid(t,BLOCK_COLOR),primsUI(e,t,n)},3e3);break;case 2:setTimeout(()=>{i.innerHTML="Backtrack Algorithm",o.innerHTML="Simple maze generation algorithm",fillGrid(t,BLOCK_COLOR),backtrackUI(e,t,n)},3e3)}curMazeGenAlgo=(curMazeGenAlgo+1)%3}function chooseMazeSolve(e,t,n){let i=document.getElementById("alg-description-title"),o=document.getElementById("alg-description-body");i.innerHTML="A* Search",o.innerHTML="simple shortest path finding algorithm",AStarUI(e,t,n)}function choose(){}function setNodeSize(){NODE_SIZE=window.innerHeight>=2e3&&window.innerWidth>=4e3?40:window.innerHeight<=2e3&&window.innerWidth<=4e3?20:30}function fillGrid(e,t){e.fillStyle=t,e.fillRect(0,0,e.canvas.width,e.canvas.height)}function initGrid(){setNodeSize();let e=window.innerWidth+NODE_SIZE-window.innerWidth%NODE_SIZE,t=window.innerHeight+NODE_SIZE-window.innerHeight%NODE_SIZE;console.log("Grid: ",e,t),e%(2*NODE_SIZE)==0&&(e+=NODE_SIZE),t%(2*NODE_SIZE)==0&&(t+=NODE_SIZE),ctx.canvas.width=e,ctx.canvas.height=t,fillGrid(ctx,BLOCK_COLOR)}function backtrackUI(e,t,n){let i=[new Point(1,1)],o=[new Point(0,2),new Point(0,-2),new Point(2,0),new Point(-2,0)],r=i[0];t.fillStyle=PATH_COLOR,function s(){if(needResizing)initAnimation();else if(0!=i.length){var l=!1;shuffle(o);for(var h=0;h<o.length;h++){var u=r.x+o[h].x,a=r.y+o[h].y;if(u>0&&a>0&&u<e[0].length-1&&a<e.length-1&&"#"==e[a][u]){for(var c=Math.min(u,r.x);c<=Math.max(u,r.x);c++)e[a][c]=" ",t.fillRect(c*n,a*n,n,n);for(var f=Math.min(a,r.y);f<=Math.max(a,r.y);f++)e[f][u]=" ",t.fillRect(u*n,f*n,n,n);r=new Point(u,a),i.push(r),l=!0;break}}l?setTimeout(s,15):(r=i.pop(),setTimeout(s,1))}else chooseMazeSolve(e,t,NODE_SIZE)}()}function primsUI(e,t,n){var i=new Point(1,1),o=[new Point(1,3),new Point(3,1)],r=[new Point(0,2),new Point(0,-2),new Point(2,0),new Point(-2,0)];e[1][1]=PATH,t.fillStyle=PATH_COLOR,shuffle(o),function s(){let l=!1;if(needResizing)initAnimation();else if(o.length){if(i=o.shift(),shuffle(r),e[i.y][i.x]!=PATH){var h=getNeighbours(i,e,r,PATH),u=getNeighbours(i,e,r,WALL);if(0!=h.length){let o=h[0].x,r=h[0].y;for(var a=Math.min(o,i.x);a<=Math.max(o,i.x);a++)e[r][a]=PATH,t.fillRect(a*n,r*n,n,n);for(var c=Math.min(r,i.y);c<=Math.max(r,i.y);c++)e[c][o]=PATH,t.fillRect(o*n,c*n,n,n);l=!0}shuffle(o=o.concat(u))}l?setTimeout(s,15):setTimeout(s,1)}else chooseMazeSolve(e,t,NODE_SIZE)}()}function kruskalsUI(e,t,n){let i=[],o=[];for(let e=0;e<array.length;e++){o.push([]);for(let t=0;t<array[0].length;t++)o[e].push(new Tree(t,e)),e>0&&t>0&&e<array.length-1&&t<array[0].length-1&&(e%2==0&&t%2!=0||e%2!=0&&t%2==0)&&i.push(new Point(t,e))}t.fillStyle=PATH_COLOR,shuffle(i),function r(){let s=!1;if(needResizing)initAnimation();else if(i.length){let e=i.pop();if(e.x%2==0){if(!o[e.y][e.x-1].isConnected(o[e.y][e.x+1])){o[e.y][e.x-1].connect(o[e.y][e.x+1]);for(let i=-1;i<=1;i++)array[e.y][e.x+i]=PATH,t.fillRect((e.x+i)*n,e.y*n,n,n)}}else if(!o[e.y-1][e.x].isConnected(o[e.y+1][e.x])){o[e.y+1][e.x].connect(o[e.y-1][e.x]);for(let i=-1;i<=1;i++)array[e.y+i][e.x]=PATH,t.fillRect(e.x*n,(e.y+i)*n,n,n);s=!0}s?setTimeout(r,15):setTimeout(r,1)}else chooseMazeSolve(e,t,NODE_SIZE)}()}function AStarUI(e,t,n,i){document.getEleme;let o=arrayToGraph(e),r=o[0],s=o[1],l=new PriorityQueue,h={};function u(e,t,n){this.w=e,this.last=t,this.cur=n}h[r.key]=new u(0,r,r),l.insert(new KeyVal(0,h[r.key])),function i(){if(needResizing)initAnimation();else if(l.isEmpty())chooseMazeGen(e,t,NODE_SIZE);else{let a=l.deleteMax().val;if(h[a.cur.key]=a,t.fillStyle=SEARCHED_COLOR,t.fillRect(a.cur.val.x*n,a.cur.val.y*n,n,n),a.cur===s){let i=function(e,t){let n=[],i=t;for(;n.unshift(i),i!==e;){if(!h[i.key])return[];i=h[i.key].last}return n}(r,s);return void setTimeout(function i(o,r){needResizing?initAnimation():r<o.length?(t.fillStyle=FINAL_PATH_COLOR,t.fillRect(o[r].val.x*n,o[r].val.y*n,n,n),setTimeout(()=>{i(o,r+1)},10)):chooseMazeGen(e,t,NODE_SIZE)}(i,0),10)}let c=a.cur.getNeighbors();for(let e=0;e<c.length;e++){let i=Math.min(c[e].edge.map(e=>e.weight)),r=c[e].node;h[r.key]||(l.insert(new KeyVal(a.w,new u(a.w+i+o[1].val.x-r.val.x+o[1].val.y-r.val.y,a.cur,r))),t.fillStyle=STANDBY_COLOR,t.fillRect(r.val.x*n,r.val.y*n,n,n))}setTimeout(i,10)}}()}function initAnimation(){initGrid(),needResizing=!1,chooseMazeGen(state=createArray(ctx.canvas.width/NODE_SIZE,ctx.canvas.height/NODE_SIZE),ctx,NODE_SIZE)}Tree.prototype.getRoot=function(){return this.parent?this.parent.getRoot():this},Tree.prototype.connect=function(e){e.getRoot().parent=this},Tree.prototype.isConnected=function(e){return e.getRoot()==this.getRoot()},Edge.prototype.disconnect=function(){for(let e=0;e<this.node1.edges.length;e++)if(this.node1.edges[e]===this){this.node1.edges.splice(e,1);break}for(let e=0;e<this.node2.edges.length;e++)if(this.node2.edges[e]===this){this.node2.edges.splice(e,1);break}},Node.prototype.connect=function(e,t){return new Edge(this,e,t)},Node.prototype.getNeighbors=function(){let e={};for(let t=0;t<this.edges.length;t++){let n=this.edges[t].node1===this?this.edges[t].node2:this.edges[t].node1;null==e[n.key]?e[n.key]={edge:[this.edges[t]],node:n}:e[n.key].edge.push(this.edges[t])}return Object.values(e)},Node.prototype.disconnectByEdge=function(e){e.disconnect()},Node.prototype.disconnectByNode=function(e){this.edges.forEach(t=>{t.node1!==e&&t.node2!==e||t.disconnect()})},Node.prototype.disconnectAll=function(e){this.edges.forEach(e=>{e.disconnect()})},PriorityQueue.prototype.isEmpty=function(){return 0==this.queue.length},PriorityQueue.prototype.insert=function(e){this.queue.push(e);let t=this.queue.length-1;for(;this.queue[t].w<this.queue[Math.floor(t/2)].w;){let e=this.queue[t];this.queue[t]=this.queue[Math.floor(t/2)],this.queue[Math.floor(t/2)]=e,t=Math.floor(t/2)}},PriorityQueue.prototype.deleteMax=function(){let e=this.queue[0],t=0,n=this.queue.pop();for(0!=this.queue.length&&(this.queue[0]=n);2*t<this.queue.length;){let e=2*t;if(2*t+1<this.queue.length&&this.queue[2*t+1].w<this.queue[e].w&&(e=2*t+1),!(this.queue[e].w<this.queue[t].w))break;{let n=this.queue[t];this.queue[t]=this.queue[e],this.queue[e]=n,t=e}}return e},initAnimation(),window.onresize=function(){needResizing=!0};